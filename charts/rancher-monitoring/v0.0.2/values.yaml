enabled: false

nameOverride: "prometheus-operator"

enabledRBAC: true

## CRD apiGroup
##
apiGroup: "monitoring.coreos.com"

## Prometheus-operator image
##
image:
  repository: quay.io/coreos/prometheus-operator
  tag: v0.23.2
  ## Prometheus-config-reloader image to use for config and rule reloading
  ##
  prometheusConfigReloader:
    repository: quay.io/coreos/prometheus-config-reloader
    tag: v0.23.2
  ## Configmap-reload image to use for reloading configmaps
  ##
  configmapReload:
    repository: quay.io/coreos/configmap-reload
    tag: v0.0.1

## Node labels for prometheus-operator pod assignment
##
nodeSelector:
  beta.kubernetes.io/os: linux

## Tolerations for use with node taints
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}

logFormat: "logfmt"

logLevel: "info"

manageCRDs: false

withValidation: true

serviceMonitor:
  ## Custom Labels to be added to ServiceMonitor
  ##
  labels: {}

## Prometheus-operator resource limits & requests
## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 200m
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 50Mi

## Already exist ServiceAccount
##
serviceAccountName: ""

exporter-coredns:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      port: 9153

exporter-kube-controller-manager:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      port: 10252

exporter-kube-dns:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      dnsmasq:
        port: 10054
      skydns:
        port: 10055

exporter-kube-etcd:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      scheme: "https"
      port: 4001
  caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  certFile: ""
  keyFile: ""

exporter-kube-scheduler:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  endpoints: []
  ports:
    metrics:
      port: 10251

exporter-kubelets:
  enabled: false
  apiGroup: "monitoring.coreos.com"

exporter-kubernetes:
  enabled: false
  apiGroup: "monitoring.coreos.com"

exporter-fluentd:
  enabled: false
  apiGroup: "monitoring.coreos.com"

metric-expression-project:
  enabled: false

metric-expression-cluster:
  enabled: false

exporter-node:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  image:
    repository: prom/node-exporter
    tag: v0.16.0
  nodeSelector:
    beta.kubernetes.io/os: linux
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi
  ports:
    metrics:
      port: 9100
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""

exporter-kube-state:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  ports:
    metrics:
      port: 8080
  image:
    repository: quay.io/coreos/kube-state-metrics
    tag: v1.4.0
  nodeSelector:
    beta.kubernetes.io/os: linux
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 130Mi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""

alertmanager:
  enabled: false
  apiGroup: "monitoring.coreos.com"
  image:
    repository: prom/alertmanager
    tag: v0.15.2
    proxy:
      repository: nginx
      tag: 1.15.2
  nodeSelector:
    beta.kubernetes.io/os: linux
  resources:
    core:
      limits:
        memory: 500Mi
        cpu: 1000m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          alertname: DeadMansSwitch
        receiver: 'null'
    receivers:
    - name: 'null'
  persistence:
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""

grafana:
  enabled: false
  level: cluster
  apiGroup: "monitoring.coreos.com"
  image:
    repository: grafana/grafana
    tag: 5.3.0
    tool:
      repository: maiwj/prometheus-auth
      tag: dev
    proxy:
      repository: nginx
      tag: 1.15.2
  nodeSelector:
    beta.kubernetes.io/os: linux
  resources:
    inits:
      limits:
        memory: 50Mi
        cpu: 50m
      requests:
        memory: 50Mi
        cpu: 50m
    core:
      limits:
        memory: 200Mi
        cpu: 200m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  persistence:
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  prometheusDatasourceURL: "http://prometheus-operated:9090"

prometheus:
  enabled: false
  level: cluster
  auth:
    args:
    - --log.debug
    - --proxy-url
    - http://localhost:9090
    - --listen-address
    - $(POD_IP):9090
    - --filter-reader-labels
    - prometheus
    - --filter-reader-labels
    - prometheus_replica
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  apiGroup: "monitoring.coreos.com"
  image:
    repository: prom/prometheus
    tag: v2.5.0
    auth:
      repository: maiwj/prometheus-auth
      tag: dev
    proxy:
      repository: nginx
      tag: 1.15.2
  nodeSelector:
    beta.kubernetes.io/os: linux
  resources:
    inits:
      limits:
        memory: 50Mi
        cpu: 50m
      requests:
        memory: 50Mi
        cpu: 50m
    core:
      limits:
        memory: 500Mi
        cpu: 1000m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
    auth:
      limits:
        memory: 200Mi
        cpu: 500m
      requests:
        memory: 100Mi
        cpu: 100m
  persistence:
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  alertingEndpoints: []
  secrets: []
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  serviceAccountNameOverride: ""
  ruleNamespaceSelector: {}
  ruleSelector:
    matchExpressions: []
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchExpressions: []
  addtionalBindingClusterRoles: []
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    fsGroup: 2000
