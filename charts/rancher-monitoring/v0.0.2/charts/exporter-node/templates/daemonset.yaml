apiVersion: {{ template "daemonset_api_version" . }}
kind: DaemonSet
metadata:
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.version" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "app.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      chart: {{ template "app.version" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        chart: {{ template "app.version" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: exporter-node
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args:
        - --web.listen-address=$(POD_IP):{{ .Values.ports.metrics.port }}
        {{- if .Values.secretName }}
        - --web.tls-cert-file=/etc/node-exporter/secrets/{{ .Values.secretName }}/tls.crt
        - --web.tls-key-file=/etc/node-exporter/secrets/{{ .Values.secretName }}/tls.key
        - --web.client-ca-file=/etc/node-exporter/secrets/{{ .Values.secretName }}/ca.crt
        {{- end }}
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --path.rootfs=/host
        {{- $usingCollectors := merge .Values.collectors .Values.defaultCollectorSettings }}
        {{- range $collectorName, $collectorVal := $usingCollectors }}
        {{- if and $collectorVal $collectorVal.enabled }}
        - --collector.{{ $collectorName }}
        {{- $_ := unset $collectorVal "enabled" -}}
        {{- if $collectorVal }}
        {{- range $collectorValKey, $collectorValVal := $collectorVal }}
        {{- if $collectorValVal }}
        - --collector.{{ $collectorName }}.{{ $collectorValKey }}={{ $collectorValVal }}
        {{- else }}
        - --collector.{{ $collectorName }}.{{ $collectorValKey }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- else }}
        - --no-collector.{{$collectorName}}
        {{- end }}
        {{- end }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: http
          containerPort: {{ .Values.ports.metrics.port }}
          {{- if .Values.enabledHostNetwork }}
          hostPort: {{ .Values.ports.metrics.port }}
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly:  true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: host
          mountPath: /host
          readOnly: true
        {{- if .Values.secretName }}
        - name: ssl
          mountPath: /etc/node-exporter/secrets/{{ .Values.secretName }}
          readOnly: true
        {{- end }}
      {{- if .Values.enabledRBAC }}
      serviceAccountName: {{ default (include "app.fullname" .) .Values.serviceAccountName }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.enabledHostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.enabledHostPID }}
      hostPID: true
      {{- end }}
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: host
        hostPath:
          path: /
      {{- if .Values.secretName }}
      - name: ssl
        secret:
          secretName: {{ .Values.secretName }}
          defaultMode: 420
      {{- end }}
